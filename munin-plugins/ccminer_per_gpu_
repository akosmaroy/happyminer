#!/usr/bin/python

#
#  create a symlink to this munin plugin, that ends with the name of the
#  algorithm you want to monitor. e.g. to monitor equihash, create:
#  ln -s /usr/share/munin/plugins/ccminer_per_gpu_ ccminer_per_gpu_equihash
#
#  to create a number of links at the same time, do:
#
#  for TARGET in ccminer_per_gpu_{cryptonight,equihash,groestl,lyra2v2,myr-gr,neoscrypt,skein} ; do ln -s /usr/share/munin/plugins/ccminer_per_gpu_ $TARGET; done
#

import os
import sys
import socket
from pprint import pprint


basename = os.path.basename(sys.argv[0])

requested_algo = os.path.basename(sys.argv[0]).split('_')[-1];

if not requested_algo :
    quit(0);

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect(("localhost", 4068))
s.send("summary")
data_str = s.recv(1024)
s.close

data = {};
for part in data_str.split(';') :
    parts = part.split('=')
    if (len(parts) > 1) :
        data[parts[0]] = parts[1];

reported_algo = data['ALGO'];


s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect(("localhost", 4068))
s.send("threads")
data = s.recv(10240)
s.close

per_gpu_str = data.split('|')

per_gpu_data = [];

for gpu_str in per_gpu_str :
    gpu_data = {};
    for part in gpu_str.split(';') :
        parts = part.split('=')
        if (len(parts) > 1) :
            gpu_data[parts[0]] = parts[1];
    if (len(gpu_data) > 1) :
        per_gpu_data.append(gpu_data);

if (len(sys.argv) > 1) and (sys.argv[1] == "config") :
	print "graph_title ccminer mining speed per GPU for %s" % (requested_algo)
	print "graph_vlabel H/s"
	print "graph_category mining"
	print "graph_info ccminer mining performance per GPU for %s" % (requested_algo)

        for gpu_data in per_gpu_data :
            print "speed_hps%s.info Mining speed for GPU %s: %s" % (gpu_data['GPU'], gpu_data['GPU'], gpu_data['CARD'])
            print "speed_hps%s.label GPU %s: %s" % (gpu_data['GPU'], gpu_data['GPU'], gpu_data['CARD'])

	quit()


if (requested_algo.lower().endswith(reported_algo.lower())) :
    for gpu_data in per_gpu_data:
        print "speed_hps%s.value %s" % (gpu_data['GPU'], float(gpu_data['KHS']) * 1000)

